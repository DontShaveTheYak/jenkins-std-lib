/* groovylint-disable DuplicateStringLiteral, NestedBlockDepth, NoDef, VariableTypeRequired */
/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5/userguide/tutorial_groovy_projects.html
 */

plugins {
    id 'maven-publish'
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Needed for signing artifacts pushed to https://oss.sonatype.org/
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.21.2'
}

version = project.findProperty('CICD_TAG') ?: '0.0.0-DEV'

group = 'io.github.dontshavetheyak'

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'jenkins-std-lib'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'jenkins-std-lib'
                description = 'A Jenkins shared library for commonly used CI/CD functions.'
                url = 'https://github.com/DontShaveTheYak/jenkins-std-lib'
                inceptionYear = '2020'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'shadycuz'
                        name = 'Levi Blaney'
                        email = 'shadycuz@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/DontShaveTheYak/jenkins-std-lib'
                    connection = 'scm:https://github.com/DontShaveTheYak/jenkins-std-lib.git'
                    developerConnection = 'scm:git@github.com:DontShaveTheYak/jenkins-std-lib.git'
                }
            }
        }
    }

    repositories {
        maven {
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            credentials {
                username = project.findProperty('nexusUsername') ?: ''
                password = project.findProperty('nexusPassword') ?: ''
            }
        }
    }
}

signing {
    def signingKeyId = findProperty('signingKeyId')
    def signingKey = findProperty('signingKey')
    def signingPassword = findProperty('signingPassword')

    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)

    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src', 'vars']
        }
        resources {
            srcDirs = ['resources']
        }
    }
    test {
        groovy {
            srcDirs = ['test']
        }
    }
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
        url 'https://repo.jenkins-ci.org/releases/'
    }
}

dependencies {
    // Use the latest Groovy version for building this library
    compileOnly('org.codehaus.groovy:groovy-all:2.5.11')
    compileOnly('com.cloudbees:groovy-cps:1.32')

    // Jenkins Plugins
    implementation('org.jenkins-ci.main:jenkins-core:2.23@jar')
    implementation('org.jenkins-ci.plugins.workflow:workflow-step-api:2.22@jar')
    implementation('org.jenkins-ci.plugins:pipeline-utility-steps:2.6.0@jar')

    // Test Frameworks
    testImplementation('junit:junit:4.12')
    testImplementation('org.spockframework:spock-core:1.3-groovy-2.5')
    testImplementation('com.lesfurets:jenkins-pipeline-unit:1.5')

    testRuntimeOnly('org.junit.vintage:junit-vintage-engine:5.4.1')

    api('org.assertj:assertj-core:3.4.1')
}

test {
    useJUnitPlatform()
}

// configure nexus staging plugin
nexusStaging {
    numberOfRetries = 50
    delayBetweenRetriesInMillis = 5000
}

wrapper {
    gradleVersion = '6.5'
    distributionType = Wrapper.DistributionType.ALL
}
