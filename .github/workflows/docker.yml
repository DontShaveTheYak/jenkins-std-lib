name: Docker

on:
  push:
    tags:
      - '*'

jobs:

  develop:
    name: Build and Push Develop Images
    runs-on: ubuntu-latest
    if: contains(github.ref_name, 'SNAPSHOT')
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prod image
        id: prod_image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "dsty/jenkins:${{ github.ref_name }}"
          file: docker/prod/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Demo image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "dsty/jenkins:demo-${{ github.ref_name }}"
          file: docker/dev/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            "baseImage=${{ steps.prod_image.outputs.digest }}"

  release:
    name: Build and Push Release Images
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prod image
        id: prod_image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "dsty/jenkins:${{ github.ref_name }},dsty/jenkins:latest"
          file: docker/prod/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Demo image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "dsty/jenkins:demo,dsty/jenkins:demo-${{ github.ref_name }}"
          file: docker/dev/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            "baseImage=${{ steps.prod_image.outputs.digest }}"
