name: Release

on:
  pull_request:
    types: closed

jobs:
  tag:
    name: Create Tag
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged && (github.base_ref == 'develop' || github.base_ref == 'master')
    outputs:
      tag: ${{ steps.calculate.outputs.next_tag }}
    steps:

      - name: Checkout Code
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt

      - name: Get Latest Tag
        id: latest_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Calculate next tag
        id: calculate
        run: python tests/helpers/release.py ${{ steps.latest_tag.outputs.tag }} ${{ github.event.pull_request.number }} ${{ github.base_ref }}

      - name: Create Tag
        id: create_tag
        uses: K-Phoen/semver-release-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_branch: ${{ github.base_ref }}
          release_strategy: tag
          tag_format: ${{ env.TAG_FORMAT }}
          tag: ${{ steps.calculate.outputs.next_tag }}

  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          ref: ${{ github.base_ref }}

      - name: Publish Package
        run: |
          chmod +x gradlew
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_CICD_TAG: ${{needs.tag.outputs.tag}}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [tag, publish]
    steps:
      - name: Create Draft Release
        uses: release-drafter/release-drafter@v5.15.0
        if: github.base_ref == 'develop'
        with:
          tag: ${{needs.tag.outputs.tag}}
          version: ${{needs.tag.outputs.tag}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: release-drafter/release-drafter@v5.15.0
        if: github.base_ref == 'master'
        with:
          tag: ${{needs.tag.outputs.tag}}
          version: ${{needs.tag.outputs.tag}}
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
