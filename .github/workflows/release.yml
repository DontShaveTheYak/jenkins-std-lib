name: Release

on:
  pull_request:
    types: closed

jobs:
  snapshot:
    name: Create Snapshot Release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged && github.base_ref == 'develop'
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          ref: 'develop'

      - name: Create Snapshot Tag
        id: snapshot_tag
        uses: K-Phoen/semver-release-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_branch: develop
          release_strategy: tag
          tag_format: "%major%.%minor%.%patch%-SNAPSHOT"

      - name: Create Draft Release
        uses: release-drafter/release-drafter@v5.12.1
        with:
          disable-autolabeler: true
          tag: ${{ steps.snapshot_tag.outputs.tag }}
          version: ${{ steps.snapshot_tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Package
        if: steps.snapshot_tag.outputs.tag
        run: |
          chmod +x gradlew
          ./gradlew publishToSonatype closeSonatypeStagingRepository
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_CICD_TAG: ${{ steps.snapshot_tag.outputs.tag }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged && github.base_ref == 'master'
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          ref: 'master'

      - name: Get Previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Remove -SNAPSHOT from tag
        env:
          PREV_TAG: ${{ steps.previoustag.outputs.tag }}
        run: echo "NEW_TAG=$( echo ${test_tag/-SNAPSHOT/})" >> $GITHUB_ENV

      - name: Create Tag
        id: release_tag
        uses: K-Phoen/semver-release-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_branch: master
          release_strategy: tag
          tag_format: "%major%.%minor%.%patch%"
          tag: ${{ env.NEW_TAG }}
      
      - name: Create Release
        if: steps.release_tag.outputs.tag
        uses: Roang-zero1/github-create-release-action@master
        with:
          created_tag: ${{ steps.release_tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 1.8
        if: steps.release_tag.outputs.tag
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Publish Package
        if: steps.release_tag.outputs.tag
        run: |
          chmod +x gradlew
          ./gradlew publishToSonatype closeSonatypeStagingRepository
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_CICD_TAG: ${{ steps.release_tag.outputs.tag }}