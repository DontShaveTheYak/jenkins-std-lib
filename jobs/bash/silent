@Library('pipeline-library')
import org.dsty.bash.BashClient
import org.dsty.bash.ScriptError

node() {

    String msg = 'TestMessage'

    def bash = new BashClient(this)

    def result = bash.silent("echo '${msg}'")


    if (result.stdOut != msg ) {
        error('Did not contain correct output.')
    }

    if ( result.stdErr ) {
        error('Should not have output anything.')
    }

    if ( result.exitCode != 0 ) {
        error('Exited with wrong code.')
    }

    def exception = null
    try {
        bash.silent('fakecommand')
    } catch (ScriptError e) {
        exception = e
    }

    if ( !exception.stdErr.contains('fakecommand: command not found') ) {
        error('Command was found.')
    }

    if (exception.stdOut) {
        error('Should not have stdOut.')
    }

    if ( exception.exitCode != 127) {
        error('Exited with wrong code.')
    }

}